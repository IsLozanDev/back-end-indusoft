// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using IDCL.Tacama.Core.Entity.Tacama.master;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

#nullable disable

namespace IDCL.Tacama.Core.Contexto.Configurations
{
    public partial class AlmacenConfiguration : IEntityTypeConfiguration<Almacen>
    {
        public void Configure(EntityTypeBuilder<Almacen> entity)
        {
            entity.HasKey(e => new { e.IdEmpresa, e.IdAlmacen })
                .HasName("PK__Almacen__902E8688BCA02833");

            entity.ToTable("Almacen");

            entity.Property(e => e.IdEmpresa)
                .HasColumnName("idEmpresa")
                .HasComment("id de la empresa");

            entity.Property(e => e.IdAlmacen)
                .ValueGeneratedOnAdd()
                .HasColumnName("idAlmacen")
                .HasComment("id del almacen es un correlativo");

            entity.Property(e => e.Clase).HasComment("clase de almacen");

            entity.Property(e => e.CodEstablecimiento)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasComment("codigo del establecimiento segun sunat");

            entity.Property(e => e.CodUbigeoAlm)
                .HasMaxLength(10)
                .HasComment("codigo de ubigeo del almacen");

            entity.Property(e => e.DesAlmacen)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("desAlmacen")
                .HasComment("descripcion de almacen");

            entity.Property(e => e.DesCorta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("desCorta")
                .HasComment("nombre corto del almacen");

            entity.Property(e => e.DesResponsable)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("desResponsable")
                .HasComment("nombre del responsable del almacen");

            entity.Property(e => e.Direccion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasComment("direccion del almacen");

            entity.Property(e => e.EmailResponsable)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("correo del responsable del almacen");

            entity.Property(e => e.FecBaja)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecBaja")
                .HasComment("fecha de baja cuando es 0");

            entity.Property(e => e.FechaModificacion)
                .HasColumnType("smalldatetime")
                .HasComment("Auditoria");

            entity.Property(e => e.FechaRegistro)
                .HasColumnType("smalldatetime")
                .HasComment("Auditoria");

            entity.Property(e => e.IdCcostos)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("idCCostos")
                .HasComment("centro de costos por default.");

            entity.Property(e => e.IdEmpresaAdmin)
                .HasColumnName("idEmpresaAdmin")
                .HasComment("id de empresa que va administrarlo externamente");

            entity.Property(e => e.IdUbicacion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("idUbicacion")
                .HasComment("id de Ubicacion");

            entity.Property(e => e.IndDefault)
                .HasColumnName("indDefault")
                .HasComment("indica almacen por default.");

            entity.Property(e => e.IndEstado)
                .HasColumnName("indEstado")
                .HasComment("estado del almacen 1 activo , 0 de baja");

            entity.Property(e => e.IndUbiGenerica)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("indUbiGenerica")
                .IsFixedLength()
                .HasComment("indicar ubicacion generica");

            entity.Property(e => e.IndUbicacion)
                .HasColumnName("indUbicacion")
                .HasComment("1 si el almacen va manejar ubicaciones");

            entity.Property(e => e.SiglaLoteAlmacen)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasComment("Siglas del Almacen");

            entity.Property(e => e.TipAlmacen)
                .HasColumnName("tipAlmacen")
                .HasComment("tipo de almacen de acuerdo a partabla grupo =333000");

            entity.Property(e => e.TipoNumeracion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasComment("Tipo de Numeracion normalmente usar consecutivo.");

            entity.Property(e => e.TlfResponsable)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tlfResponsable")
                .HasComment("telefono del responsable del almacen");

            entity.Property(e => e.UsuarioModificacion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("Auditoria");

            entity.Property(e => e.UsuarioRegistro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("Auditoria");

            entity.Property(e => e.VerificaLote).HasComment("valida el Lote del almacen");

            entity.Property(e => e.VerificaStock).HasComment("valida el stock del almacen");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Almacen> entity);
    }
}
