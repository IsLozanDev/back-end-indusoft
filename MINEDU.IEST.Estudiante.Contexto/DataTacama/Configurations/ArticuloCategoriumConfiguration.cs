// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using IDCL.Tacama.Core.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

#nullable disable

namespace IDCL.Tacama.Core.Contexto.Configurations
{
    public partial class ArticuloCategoriumConfiguration : IEntityTypeConfiguration<ArticuloTacamaCategorium>
    {
        public void Configure(EntityTypeBuilder<ArticuloTacamaCategorium> entity)
        {
            entity.HasKey(e => new { e.IdEmpresa, e.IdTipoArticulo, e.CodCategoria });

            entity.ToTable("Articulo_Categoria");

            entity.Property(e => e.IdEmpresa)
                .HasColumnName("idEmpresa")
                .HasComment("id de Empresa");

            entity.Property(e => e.IdTipoArticulo)
                .HasColumnName("idTipoArticulo")
                .HasComment("tipo de Articulo de partabla grupo=333000");

            entity.Property(e => e.CodCategoria)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("codigo de la categoria");

            entity.Property(e => e.CodCategoriaAsoc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCategoriaAsoc")
                .HasComment("no se usa");

            entity.Property(e => e.CodCategoriaSup)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("codigo de la categoria superioro para niveles mayores a 1");

            entity.Property(e => e.CodCuentaAdm)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaAdm")
                .HasComment("cuentas para gastos administrativos");

            entity.Property(e => e.CodCuentaCompra)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaCompra")
                .HasComment("cuenta para la provision de compras.");

            entity.Property(e => e.CodCuentaConsumo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaConsumo")
                .HasComment("cuenta de consumo.");

            entity.Property(e => e.CodCuentaPorRecibir)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaPorRecibir")
                .HasComment("cuenta para la provision de compra Por Recibir");

            entity.Property(e => e.CodCuentaPro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaPro")
                .HasComment("cuenta para gastos de produccion");

            entity.Property(e => e.CodCuentaVenta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaVenta")
                .HasComment("cuenta para valor venta en el caso de ventas.");

            entity.Property(e => e.CodCuentaVenta12)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaVenta12")
                .HasComment("cuenta para la 12 en casos especiales.");

            entity.Property(e => e.CodCuentaVentaDscto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaVentaDscto");

            entity.Property(e => e.CodCuentaVentaRelacionada)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaVentaRelacionada")
                .HasComment("para el caso de ventas relacionadas o vinculadas");

            entity.Property(e => e.CodCuentaVta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codCuentaVta")
                .HasComment("cuenta para gastos de ventas");

            entity.Property(e => e.FechaModificacion)
                .HasColumnType("smalldatetime")
                .HasComment("Auditoria");

            entity.Property(e => e.FechaRegistro)
                .HasColumnType("smalldatetime")
                .HasComment("Auditoria");

            entity.Property(e => e.IdTipoArticuloAsoc)
                .HasColumnName("idTipoArticuloAsoc")
                .HasComment("no se usa");

            entity.Property(e => e.IndCuenta)
                .HasColumnName("indCuenta")
                .HasComment("indica la cuenta");

            entity.Property(e => e.IndManejaUnmMayor)
                .IsRequired()
                .HasColumnName("indManejaUnmMayor")
                .HasDefaultValueSql("((1))")
                .HasComment("no se usa");

            entity.Property(e => e.IndManejaUnmMenor)
                .HasColumnName("indManejaUnmMenor")
                .HasComment("no se usa");

            entity.Property(e => e.IndUltimoNivel)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("indUltimoNivel")
                .IsFixedLength()
                .HasComment("indica el nivel final");

            entity.Property(e => e.NombreCategoria)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre_categoria")
                .HasComment("nombre del a categoria");

            entity.Property(e => e.NumNivel)
                .HasColumnName("numNivel")
                .HasComment("nivel de la categoria segun lo requiera 1,2,3,,,,,");

            entity.Property(e => e.NumVerPlanCuentas)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("numVerPlanCuentas")
                .HasComment("version del plan de cuentas.");

            entity.Property(e => e.UsuarioModificacion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("Auditoria");

            entity.Property(e => e.UsuarioRegistro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("Auditoria");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<ArticuloTacamaCategorium> entity);
    }
}
